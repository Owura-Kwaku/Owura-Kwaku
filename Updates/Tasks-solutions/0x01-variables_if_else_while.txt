=========================
0-positive_or_negative.c


#include <stdio.h>
#include <stdlib.h>
#include <time.h>
/**
 * main - Entry point
 *
 * Return: Always 0 (Success)
 */
int main(void)
{
int n;
srand(time(0));
n = rand() - RAND_MAX / 2;
/* your code goes there */
if (n > 0)
{
printf("%d is positive\n", n);
}
if (n < 0)
{
printf("%d is negative\n", n);
}
if (n == 0)
{
printf("%d is zero\n", n);
}
return (0);
}


==============
1-last_digit.c


#include <stdlib.h>
#include <time.h>
#include <stdio.h>


/**
 * main - Prints the last digit of a randomly generated number
 *        and whether it is greater than 5, less than 6, or 0.
 *
 * Return: Always 0.
 */
int main(void)
{
        int n;
        srand(time(0));
        n = rand() - RAND_MAX / 2;

        if ((n % 10) > 5)
        {
                printf("Last digit of %d is %d and is greater than 5\n",
                        n, n % 10);
        }
        else if ((n % 10) < 6 && (n % 10) != 0)
        {
                printf("Last digit of %d is %d and is less than 6 and not 0\n",
                        n, n % 10);
        }
        else
        {
                printf("Last digit of %d is %d and is 0\n",
                        n, n % 10);
        }

        return (0);
}


==================
2-print_alphabet.c


#include <stdio.h>


/**
 * main - prints the alphabet in lowercase,
 * followed by a new line
 * Return: Always 0 (Success)
 */
int main(void)
{
        char ch;


        for (ch = 'a'; ch <= 'z'; ch++)
        {
                putchar(ch);
        }
        putchar('\n');
        return (0);
}


===================
3-print_alphabets.c


#include <stdio.h>


/**
 * main - prints the alphabet in lowercase, and then in uppercase,
 * followed by a new line
 * Return: Always 0 (Success)
 */
int main(void)
{
        int ch;


        for (ch = 'a'; ch <= 'z'; ch++)
                putchar(ch);
        for (ch = 'A'; ch <= 'Z'; ch++)
                putchar(ch);
        putchar('\n');
        return (0);
}


=================
4-print_alphabt.c


#include <stdio.h>


/**
 * main - prints the alphabet in lowercase,
 * followed by a new line, except q and e
 * Return: Aways 0 (Sucess)
 */
int main(void)
{
        char ch = 'a';


        while (ch <= 'z')
        {
                if (ch != 'e' && ch != 'q')
                {
                        putchar(ch);
                }
                ch++;
        }
        putchar('\n');
        return (0);
}


=================
5-print_numbers.c


#include <stdio.h>


/**
 * main - prints all single digit numbers of base
 * 10 starting from 0, followed by a new line
 * Return: Always 0 (Success)
 */
int main(void)
{
        int n;


        for (n = 0; n < 10; n++)
                printf("%d", n);
        printf("\n");
        return (0);
}


==================
6-print_numberz.c


#include <stdio.h>


/**
 * main - prints all single digit numbers of base 10 starting from 0,
 * followed by a new line, using putchar
 * Return: Always 0 (Success)
 */
int main(void)
{
        int n;


        for (n = 48; n < 58; n++)
        {
                putchar(n);
        }
        putchar('\n');
        return (0);
}


==================
7-print_tebahpla.c


#include <stdio.h>


/**
 * main - prints the lowercase alphabet in reverse,
 * followed by a new line
 * Return: Always 0 (Success)
 */
int main(void)
{
        char ch;


        for (ch = 'z'; ch >= 'a'; ch--)
        {
                putchar(ch);
        }
        putchar('\n');
        return (0);
}


=================
8-print_base16.c


#include <stdio.h>


/**
 * main - prints all the numbers of base 16 in lowercase,
 * followed by a new line
 * Return: Always 0 (Success)
 */
int main(void)
{
        int n;
        char ch;


        for (n = 48; n < 58; n++)
        {
                putchar(n);
        }
        for (ch = 'a'; ch <= 'f'; ch++)
        {
                putchar(ch);
        }
        putchar('\n');
        return (0);
}


===============
9-print_comb.c


#include <stdio.h>


/**
 * main - prints all possible combinations of single-digit numbers
 * Return: Always 0 (Success)
 */
int main(void)
{
        int n;


        for (n = 48; n < 58; n++)
        {
                putchar(n);
                if (n != 57)
                {
                        putchar(',');
                        putchar(' ');
                }
        }
        putchar('\n');
        return (0);
}


=================
100-print_comb3.c


#include <stdio.h>


/**
 * main - prints all possible different combinations of two digits
 * Return: ALways 0 (Success)
 */
int main(void)
{
        int n, m;


        for (n = 48; n <= 56; n++)
        {
                for (m = 49; m <= 57; m++)
                {
                        if (m > n)
                        {
                                putchar(n);
                                putchar(m);
                                if (n != 56 || m != 57)
                                {
                                        putchar(',');
                                        putchar(' ');
                                }
                        }
                }
        }
        putchar('\n');
        return (0);
}


=================
101-print_comb4.c


#include <stdio.h>


/**
 * main - prints all possible different combinations of three digits
 * Return: Always 0 (Success)
 */
int main(void)
{
        int n, m, l;


        for (n = 48; n < 58; n++)
        {
                for (m = 49; m < 58; m++)
                {
                        for (l = 50; l < 58; l++)
                        {
                                if (l > m && m > n)
                                {
                                        putchar(n);
                                        putchar(m);
                                        putchar(l);
                                        if (n != 55 || m != 56)
                                        {
                                                putchar(',');
                                                putchar(' ');
                                        }
                                }
                        }
                }
        }
        putchar('\n');
        return (0);
}


=================
102-print_comb5.c


#include <stdio.h>


/**
 * main - prints all possible combinations of two two-digit numbers
 * Return: Always 0 (Success)
 */
int main(void)
{
        int i, j;


        for (i = 0; i < 100; i++)
        {
                for (j = 0; j < 100; j++)
                {
                        if (i < j)
                        {
                                putchar((i / 10) + 48);
                                putchar((i % 10) + 48);
                                putchar(' ');
                                putchar((j / 10) + 48);
                                putchar((j % 10) + 48);
                                if (i != 98 || j != 99)
                                {
                                        putchar(',');
                                        putchar(' ');
                                }
                        }


                }
        }
        putchar('\n');
        return (0);
}